
openapi: 3.0.0
info:
  title: Kletis Forum API - Comments
  description: API for managing comments in tractor posts
  version: 1.0.0
servers:
  - url: http://localhost:3000
    description: Local development server

paths:
  /comments/:
    get:
      summary: Get all comments
      responses:
        '200':
          description: List of all comments
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Comment'
        '500':
          description: Server error

    post:
      summary: Create a new comment
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Comment'
      responses:
        '201':
          description: Comment created successfully
        '400':
          description: Bad Request
          '422':
            description: can't be empty

  /comments/{id}:
    get:
      summary: Get a comment by ID
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: ID of the comment
      responses:
        '200':
          description: Comment found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
        '404':
          description: Comment not found
  /post/{postid}/comments/:
    get:
      summary: Get all comments under post of such ID
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: ID of the post
      responses:
        '200':
          description: Comment found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
        '404':
          description: post not found
        '400':
          description: Post id is required
  /user/{userId}/comments/:
    get:
      summary: Get all comments under a user of such ID
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: ID of the user
      responses:
        '200':
          description: Comment found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
        '404':
          description: No comments found for this user
        '400':
          description: Bad or non-existant user id
        '403':
          description: User ID (userId) is required

    put:
      summary: Update a comment by ID
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: ID of the comment to update
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Comment'
      responses:
        '200':
          description: Comment updated successfully
        '404':
          description: Comment not found
        '422':
            description: can't empty field

    delete:
      summary: Delete a comment by ID
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: ID of the comment to delete
      responses:
        '204':
          description: Comment deleted successfully
        '404':
          description: Comment not found

components:
  schemas:
    Comment:
      type: object
      properties:
        _id:
          type: string
          description: Unique identifier for the comment
        content:
          type: string
          description: The content of the comment
        post:
          type: string
          description: The ID of the post the comment belongs to
        author:
          type: string
          description: The ID of the user who created the comment
        upvotes:
          type: integer
          description: Number of upvotes on the comment
        downvotes:
          type: integer
          description: Number of downvotes on the comment
        created_at:
          type: string
          format: date-time
          description: The timestamp of when the comment was created
        updated_at:
          type: string
          format: date-time
          description: The timestamp of the last update to the comment
